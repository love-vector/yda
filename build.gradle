plugins {
    id 'com.diffplug.spotless' version '6.25.0' apply true
    id 'checkstyle' apply true
    id 'maven-publish' apply true
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'com.diffplug.spotless'
    apply plugin: 'checkstyle'
    apply plugin: 'maven-publish'

    group = 'ai.yda'
    version = '0.0.1'

    java {
        sourceCompatibility = JavaVersion.VERSION_21
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    dependencies {
        // Lombok
        compileOnly 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'
    }

    spotless {
        java {
            palantirJavaFormat()
            removeUnusedImports()
            licenseHeaderFile(rootProject.file("copyright.txt"))
            importOrder('java', 'javax|jakarta', '', 'org.springframework', 'ai.yda', '\\#')
        }
    }

    compileJava.dependsOn 'spotlessApply'

    checkstyle {
        toolVersion = '10.3.1'
        config = rootProject.resources.text.fromFile('.config/checkstyle/checkstyle.xml')
        showViolations = true
        ignoreFailures = true
    }

    check.dependsOn 'checkstyleMain', 'checkstyleTest'

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                pom {
                    licenses {
                        license {
                            name = 'GNU LESSER GENERAL PUBLIC LICENSE, Version 3'
                            url = 'https://www.gnu.org/licenses/lgpl-3.0.txt'
                        }
                    }
                }
            }
        }
        repositories {
            mavenLocal()
        }
    }

    build.dependsOn 'publishToMavenLocal'

    processResources {
        from(rootProject.resources.text.fromFile('.config/log/logback-spring.xml'))
    }
}