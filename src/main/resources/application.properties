# Server
server.port=8081
server.tomcat.connection-timeout=900m

# Logging
logging.level.org.vector=${LOGGING_LEVEL:DEBUG}

# Spring Boot
spring.threads.virtual.enabled=true

spring.docker.compose.enabled=true
spring.docker.compose.file=docker-compose.yml

# R2DBC
spring.r2dbc.url=r2dbc:postgresql://${PG_HOST:localhost}:${PG_PORT:15432}/${PG_DB:postgres}
spring.r2dbc.username=${PG_USER:postgres}
spring.r2dbc.password=${PG_PASS:postgres}
spring.r2dbc.properties.schema=chatbot
spring.r2dbc.pool.initial-size=20
spring.r2dbc.pool.max-size=100

# Liquibase
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.yaml
spring.liquibase.url=jdbc:postgresql://${PG_HOST:localhost}:${PG_PORT:15432}/${PG_DB:postgres}
spring.liquibase.user=${PG_USER:postgres}
spring.liquibase.password=${PG_PASS:postgres}
spring.liquibase.default-schema=chatbot

# Milvus
spring.ai.vectorstore.milvus.client.host=${MILVUS_URL:localhost}
spring.ai.vectorstore.milvus.client.port=${MILVUS_PORT:19530}
spring.ai.vectorstore.milvus.client.username=${MILVUS_USERNAME:dave}
spring.ai.vectorstore.milvus.client.password=${MILVUS_PASSWORD:432143}

# API prefix
spring.webflux.base-path=${API_PREFIX:/api}

# OpenAI
spring.ai.openai.api-key=${OPENAI_API_KEY:open_api_key}
spring.ai.openai.embedding.options.model=${OPENAI_API_EMBEDDING_MODEL:text-embedding-3-small}